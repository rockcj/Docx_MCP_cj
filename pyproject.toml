[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "docx-mcp"
version = "0.1.4"
description = "DOCX MCP处理器 - 完整的Word文档处理工具，支持图片编辑和表格操作"
readme = "README_Enhanced.md"
license = {text = "MIT"}
authors = [
    {name = "DOCX MCP Team", email = "support@docx-mcp.com"}
]
maintainers = [
    {name = "DOCX MCP Team", email = "support@docx-mcp.com"}
]
keywords = [
    "docx", 
    "word", 
    "document", 
    "mcp", 
    "ai-tools", 
    "document-processing",
    "image-processing",
    "font-management"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Office Suites",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.8"
dependencies = [
    "python-docx>=1.1.0",
    "mcp>=1.0.0",
    "fastmcp>=0.5.0",
    "Pillow>=10.0.0",
    "requests>=2.31.0",
    "pydantic>=2.5.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
cloud = [
    "oss2>=2.18.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "colorlog>=6.7.0",
]
all = [
    "docx-mcp[cloud,dev]"
]

[project.urls]
Homepage = "https://github.com/rockcj/Docx_MCP_cj"
Documentation = "https://github.com/rockcj/Docx_MCP_cj/blob/main/README_Enhanced.md"
Repository = "https://github.com/rockcj/Docx_MCP_cj.git"
Issues = "https://github.com/rockcj/Docx_MCP_cj/issues"
Changelog = "https://github.com/rockcj/Docx_MCP_cj/blob/main/CHANGELOG.md"

[project.scripts]
docx-mcp = "enhanced_main:main"
docx-interactive = "enhanced_main:run_interactive_mode"

[tool.setuptools]
packages = ["core"]
py-modules = ["enhanced_main", "enhanced_server", "main"]

[tool.setuptools.package-data]
"*" = ["*.py"]
core = ["*.py"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "docx.*",
    "oss2.*",
    "mcp.*",
    "fastmcp.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["core", "enhanced_server", "enhanced_main"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true